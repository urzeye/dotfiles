#!/bin/bash
#
# aarch64需要自己编译，官方没有提供对应版本的 release
#
# 使用方法：
# 1. mcfly 可执行文件放到 环境变量 的目录中
# 2. 在配置文件中
# Bash:
# 	eval "$(mcfly init bash)"
# Zsh:
# 	eval "$(mcfly init zsh)"
# Fish:
# 	mcfly init fish | source

set -e

function judgeArch {
	case $1 in
	arm*) echo arm ;;
	amd* | x86*) echo x86_64 ;;
	*) ;;
	esac
}

if [ -z "$DOWNLOAD_ARCH" ]; then
	## 判定系统处理器架构
	case $(uname -m) in
	arm*) arch=arm ;;
	amd* | x86*) arch=x86_64 ;;
	*) ;;
	esac
else
	arch=$(judgeArch ${DOWNLOAD_ARCH})
	if [ "$arch" == "arm" ]; then
		echo "mcfly 现下载的为普通arm版，不支持 aarch64 架构，可尝试自行编译"
	fi
fi

if [ "$arch" == "arm" ]; then
	suffix=gnueabi
else
	suffix=musl
fi

version=v0.6.0
file_name=mcfly-${version}-${arch}-unknown-linux-${suffix}.tar.gz
url=https://github.com/cantino/mcfly/releases/download/$version/$file_name
print "mcfly url: $url"

# 下载并解压
wget -qO - ${GITHUB_PROXY}${url} | tar zxf -
# 可执行文件
if [ -n "$DOWNLOAD_ARCH" ]; then
	mv mcfly $DOWNLOAD
	# 输出时，使用 \ 对 $ 进行转义
	cat <<EOF
mcfly：请自行执行以下配置
Bash -> eval "\$(mcfly init bash)"
Zsh  -> eval "\$(mcfly init zsh)"
Fish -> mcfly init fish | source
EOF
	print "mcfly下载完成"
else
	if [ "$PWD" != "$HOME/.local/bin" ]; then
		mv mcfly ~/.local/bin
	fi
	print "mcfly安装完成"
fi

rm -rf mcfly-*
