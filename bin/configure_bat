#!/bin/bash
#
# aarch64 需依赖glibc 2.18

set -e

need_glibc_version=2.18

if ! command -v check_glibc_version >/dev/null 2>&1; then
	. ~/.local/script/check_glibc_version.sh
fi

function judgeArch {
	case $1 in
	arm*) echo aarch64 ;;
	amd* | x86*) echo x86_64 ;;
	*) ;;
	esac
}

if [ -z "$DOWNLOAD_ARCH" ]; then
	## 判定系统处理器架构
	case $(uname -m) in
	x86_64)
		arch="x86_64"
		;;
	ar*)
		arch="aarch64"
		;;
	*)
		arch=$(uname -m)
		;;
	esac
	check_glibc_version $need_glibc_version
else
	arch=$(judgeArch ${DOWNLOAD_ARCH})
fi
version=v0.21.0
file_name=bat-${version}-${arch}-unknown-linux-$([[ "$arch" == "x86_64" ]] && echo musl || echo gnu).tar.gz
url=https://github.com/sharkdp/bat/releases/download/${version}/${file_name}
print "url: $url"

# 下载并解压
wget -qO - ${GITHUB_PROXY}${url} | tar zxf -
# 可执行文件
if [ -n "$DOWNLOAD_ARCH" ]; then
	cp -f bat-*/bat $DOWNLOAD
	print "bat下载完成"
else
	mv bat-*/bat ~/.local/bin
	print "bat安装完成"
fi
rm -rf bat-*/
